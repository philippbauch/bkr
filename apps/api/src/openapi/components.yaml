components:
  schemas:
    #-------------------------------
    # Errors
    #-------------------------------
    BadRequest:
      type: object
      properties:
        error:
          type: string
          example: Bad Request

    Unauthorized:
      type: object
      properties:
        error:
          type: string
          example: Unauthorized

    Forbidden:
      type: object
      properties:
        error:
          type: string
          example: Forbidden

    NotFound:
      type: object
      properties:
        error:
          type: string
          example: Not Found

    InternalServerError:
      type: object
      properties:
        error:
          type: string
          example: Internal Server Error

    #-------------------------------
    # Result schemas
    #-------------------------------
    Result:
      type: object
      properties:
        stationId:
          type: string
          format: uuid
        teamId:
          type: string
          format: uuid
        checkIn:
          type: string
          format: date-time
        checkOut:
          type: string
          format: date-time
        points:
          type: integer
          minimum: 0
          default: 0

    CreateResultSchema:
      type: object
      required:
        - teamId
      properties:
        teamId:
          $ref: '#/components/schemas/Result/properties/teamId'

    UpdateResultSchema:
      type: object
      properties:
        checkIn:
          $ref: '#/components/schemas/Result/properties/checkIn'
        checkOut:
          $ref: '#/components/schemas/Result/properties/checkOut'
        points:
          $ref: '#/components/schemas/Result/properties/points'

    #-------------------------------
    # Settings schemas
    #-------------------------------
    Settings:
      type: object
      properties:
        id:
          type: string
          format: uuid
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
        publishResults:
          type: boolean
          default: false

    UpdateSettingsSchema:
      type: object
      properties:
        publishResults:
          $ref: '#/components/schemas/Settings/properties/publishResults'

    #-------------------------------
    # Station schemas
    #-------------------------------
    Station:
      type: object
      properties:
        id:
          type: string
          format: uuid
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
        name:
          type: string
          minLength: 3
        number:
          type: integer
          minimum: 1
        members:
          type: array
          items:
            type: string
          default: []
        code:
          description: The station code is only visible to admin users.
          type: string
          length: 6
        order:
          description: The order in which to rank the teams.
          type: string
          enum: [ASC, DESC]
        results:
          type: array
          items:
            $ref: '#/components/schemas/Result'
          default: []

    CreateStationSchema:
      type: object
      required:
        - name
        - number
        - code
        - order
      properties:
        name:
          $ref: '#/components/schemas/Station/properties/name'
        number:
          $ref: '#/components/schemas/Station/properties/number'
        members:
          $ref: '#/components/schemas/Station/properties/members'
        code:
          $ref: '#/components/schemas/Station/properties/code'
        order:
          $ref: '#/components/schemas/Station/properties/order'

    UpdateStationSchema:
      type: object
      properties:
        name:
          $ref: '#/components/schemas/Station/properties/name'
        number:
          $ref: '#/components/schemas/Station/properties/number'
        members:
          $ref: '#/components/schemas/Station/properties/members'
        code:
          $ref: '#/components/schemas/Station/properties/code'
        order:
          $ref: '#/components/schemas/Station/properties/order'

    #-------------------------------
    # Team schemas
    #-------------------------------
    Team:
      type: object
      properties:
        id:
          type: string
          format: uuid
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
        name:
          type: string
          minLength: 3
        number:
          type: integer
          minimum: 1
        members:
          type: array
          items:
            type: string
          default: []
        startedAt:
          type: string
          format: date-time
        finishedAt:
          type: string
          format: date-time
        penalty:
          type: integer
          minimum: 0
          default: 0
        results:
          type: array
          items:
            $ref: '#/components/schemas/Result'
          default: []

    CreateTeamSchema:
      type: object
      required:
        - name
        - number
      properties:
        name:
          $ref: '#/components/schemas/Station/properties/name'
        number:
          $ref: '#/components/schemas/Station/properties/number'
        members:
          $ref: '#/components/schemas/Station/properties/members'

    UpdateTeamSchema:
      type: object
      properties:
        name:
          $ref: '#/components/schemas/Station/properties/name'
        number:
          $ref: '#/components/schemas/Station/properties/number'
        members:
          $ref: '#/components/schemas/Station/properties/members'
        startedAt:
          $ref: '#/components/schemas/Station/properties/startedAt'
        finishedAt:
          $ref: '#/components/schemas/Station/properties/finishedAt'

    #-------------------------------
    # Token schemas
    #-------------------------------
    Token:
      type: object
      required:
        - token
      properties:
        token:
          type: string
          format: jwt

    CreateTokenSchema:
      type: object
      required:
        - code
      properties:
        code:
          type: string
          length: 6

  parameters:
    stationId:
      name: stationId
      description: ID of the station
      in: path
      required: true
      schema:
        type: string
        format: uuid

    teamId:
      name: teamId
      description: ID of the team
      in: path
      required: true
      schema:
        type: string
        format: uuid

  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
